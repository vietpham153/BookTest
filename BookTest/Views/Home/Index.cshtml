@using BookTest.Models.DTOs
@model BookDisplayModel
@{
    ViewData["Title"] = "Trang chủ";
}

<div class="my-2">
    <form asp-action="Index" class="row gx-3 gy-2 align-items-center" method="get">
        <div class="col-sm-3">
            <label class="visually-hidden" for="genreId">Thể loại</label>
            <select class="form-select" id="genreId" name="genreId">
                <option value="">Chọn thể loại</option>
                @foreach (var genre in Model.Genres)
                {
                    <option selected="@(genre.Id == Model.GenreId)" value="@genre.Id">@genre.GenreName</option>
                }

            </select>
        </div>
        <div class="col-sm-3">
            <label class="visually-hidden" for="sTerm">Tìm kiếm theo tiêu đề sách</label>
            <div class="input-group">
                <div class="input-group-text"></div>
                <input type="text" class="form-control" value="@Model.STerm" id="sTerm" name="sTerm" placeholder="Tìm kiếm theo tiêu đề sách">
            </div>
        </div>

        <div class="col-auto">
            <button type="submit" class="btn btn-primary">Tìm kiếm</button>
            <button type="reset" class="btn btn-danger">Đặt lại</button>
        </div>
    </form>
</div>

<div class="w-100 mt-4 d-flex flex-wrap">
    @foreach (var book in Model.Books)
    {
        <div class="card mx-2 mt-4" style="width: 16rem;">
			@if (string.IsNullOrEmpty(book.Image))
			{
                <img style="width:100%;height:300px" src="/image/no_image.jpg" class="card-img-top" alt="...">
			}
			else
			{
                <img style="width:100%;height:300px" src="/image/@book.Image" class="card-img-top" alt="...">
			}
            <div class="card-body">
                <h5 class="card-title">@book.BookName</h5>
                <p class="card-text">
					Thể Loại: @book.GenreName<br />
                    Tác Giả: @book.AuthorName<br />
					Giá: @book.Price<br />
                </p>
                <button type="button" onclick="add(@book.Id)" href="#" class="btn btn-primary"> <i class="bi bi-cart"></i> Add To Cart</button>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        var isAuthenticated = @(User.Identity.IsAuthenticated.ToString().ToLower());
        async function add(bookId) {
            try {
				if (!isAuthenticated) {
                    const toast = new bootstrap.Toast(document.getElementById('errorToast'));
                    toast.show();
                    setTimeout(() => {
                        window.location.href = "/Identity/Account/Login";
                    }, 2000);
					return;
				}
                const response = await fetch(`/Cart/AddItem?bookId=${bookId}&quantity=1&redirect=0`);
                if (response.ok) {
                    const result = await response.json();
                    document.getElementById("cartCount").innerText = result;

                    // popup thong bao
                    const toast = new bootstrap.Toast(document.getElementById('cartToast'));
                    toast.show();
                } else {
                    console.error("Lỗi HTTP:", response.status);
                }
            } catch (e) {
                console.error("Lỗi khi gọi API:", e);
            }
        }
    </script>
}